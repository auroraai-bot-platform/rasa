name: Build and deploy botfront compatible rasa image to AWS ECR

# Only build on merge/push to main
on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

env:
  ECR_REPOSITORY: rasa-private
  # The commit SHA that triggered the workflow run
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile.botfront .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Tag ECR image with latest as well
      run: |
        MANIFEST=$(aws ecr batch-get-image --repository-name $ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG --output json | jq --raw-output --join-output '.images[0].imageManifest')
        aws ecr put-image --repository-name $ECR_REPOSITORY --image-tag latest --image-manifest "$MANIFEST"

    - name: Fill systems manager parameter with latest version id
      run: aws ssm put-parameter --name botfront-image-tag-latest --type String --value $IMAGE_TAG --overwrite